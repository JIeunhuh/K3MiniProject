{"ast":null,"code":"var _jsxFileName = \"C:\\\\MiniProject\\\\project_front\\\\my_mini_project\\\\src\\\\project\\\\Search_RestaurantLists\\\\FoodInfo.js\",\n  _s = $RefreshSig$();\n// Foodlist 클릭하면 상세정보 달아주기(Modal)\nimport style from './Modal.module.css';\nimport ReactModal from 'react-modal';\nimport { useState, useEffect } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { isLoggedInState, nicknameState } from '../LoginRecoil';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\n// 다른 컴포넌트에서 해당 컴포넌트의 변수? 함수? 쓰려면 props 설정 해야함\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FoodInfo = ({\n  isOpen,\n  onClose,\n  restaurant\n}) => {\n  _s();\n  // 로그인 사용자만 이용하게 하기 위함 !\n  const [isLoggedin, setIsLoggedIn] = useRecoilState(isLoggedInState);\n\n  // db넣기 위해서 받는 거 (nickname, constent, review score)\n  const [nickname, setNickname] = useRecoilState(nicknameState);\n  const [reviewScore, setReviewScore] = useState(0);\n  //  review 상태\n  const [content, setContent] = useState('');\n\n  // db nickname 가져오기 위한 상태\n  const [data, setData] = useState([]);\n  if (!isOpen) return null;\n  useEffect(() => {\n    // nickname 가져오기\n    let url = 'http://10.125.121.176:8080/allmembers';\n    fetch(url).then(resp => resp.json()).then(data => {\n      setData(data);\n      console.log(data);\n    }).catch(err => console.log(err));\n  }, []);\n\n  // # 검색 !\n  const handleSubmit = () => {\n    let restId = restaurant.id;\n    const data = {\n      restId,\n      nickname,\n      content,\n      reviewScore\n    };\n\n    //review data fetch하긩\n    //review 작성해서 버튼 클릭하면 데이터 보내기\n    const getData = () => {\n      // event.preventDefault();\n      let url = 'http://10.125.121.176:8080/insertReview';\n\n      //fetch()\n      axios.post(url, data).then(resp =>\n      // 서버 응답 처리 \n      console.log('리뷰 작성 성공', resp.data)).catch(err => {\n        // 오류 처리\n        console.log('리뷰 작성 오류:', err);\n      });\n    };\n    getData();\n\n    //리뷰작성 완료 후 초기화\n    setContent('');\n    setReviewScore(0);\n  };\n  return (\n    /*#__PURE__*/\n    // react-modal 사용할때 요소 지정 다 해주어야 함\n    _jsxDEV(ReactModal, {\n      isOpen: isOpen // 모달 오픈\n      ,\n      onRequestClose: onClose // 클로즈\n      ,\n      portalClassName: style.modalContent //모달 창 스타일\n      ,\n      overlayClassName: style.modalOverlay // 배경 스타일\n      ,\n      shouldCloseOnOverlayClick: false // 모달 창 외부 클릭으로 닫히는 것 방지\n      ,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.modalContentInner,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            fontSize: '50px'\n          },\n          children: restaurant.rname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: restaurant.city + ' ' + restaurant.city_gu + ' ' + restaurant.city_dong + ' ' + restaurant.city_address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this), isLoggedin == false ? /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"textarea_field\",\n            children: \"\\uB9AC\\uBDF0\\uB97C \\uC791\\uC131\\uD558\\uC138\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            value: content,\n            onChange: e => setContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${style.label} ${style.clickBtn}`,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: `nes-btn is-error ${style.sarchBtn}`,\n              onClick: handleSubmit,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(ReactModal, {\n          isOpen: isOpen // 모달 오픈\n          ,\n          onRequestClose: onClose // 클로즈\n          ,\n          portalClassName: style.modalLogin,\n          overlayClassName: style.modalOverlay,\n          shouldCloseOnOverlayClick: false,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\uB9AC\\uBDF0\\uB97C \\uB0A8\\uAE30\\uAE30 \\uC704\\uD574\\uC120 \\uB85C\\uADF8\\uC778\\uC774 \\uD544\\uC694 \\uD569\\uB2C8\\uB2E4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: '/login',\n              children: \"\\uB85C\\uADF8\\uC778 \\uD558\\uB7EC\\uAC00\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClose,\n            className: `${style.closeBtn}`,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: `${style.closeBtn}`,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(FoodInfo, \"AQI28zbrsduG54IsN5rzG8lPfeE=\", false, function () {\n  return [useRecoilState, useRecoilState];\n});\n_c = FoodInfo;\nexport default FoodInfo;\nvar _c;\n$RefreshReg$(_c, \"FoodInfo\");","map":{"version":3,"names":["style","ReactModal","useState","useEffect","useRecoilState","isLoggedInState","nicknameState","axios","Link","jsxDEV","_jsxDEV","FoodInfo","isOpen","onClose","restaurant","_s","isLoggedin","setIsLoggedIn","nickname","setNickname","reviewScore","setReviewScore","content","setContent","data","setData","url","fetch","then","resp","json","console","log","catch","err","handleSubmit","restId","id","getData","post","onRequestClose","portalClassName","modalContent","overlayClassName","modalOverlay","shouldCloseOnOverlayClick","children","className","modalContentInner","fontSize","rname","fileName","_jsxFileName","lineNumber","columnNumber","city","city_gu","city_dong","city_address","htmlFor","type","value","onChange","e","target","label","clickBtn","sarchBtn","onClick","modalLogin","to","closeBtn","_c","$RefreshReg$"],"sources":["C:/MiniProject/project_front/my_mini_project/src/project/Search_RestaurantLists/FoodInfo.js"],"sourcesContent":["// Foodlist 클릭하면 상세정보 달아주기(Modal)\r\nimport style from './Modal.module.css';\r\nimport ReactModal from 'react-modal';\r\nimport { useState, useEffect } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport { isLoggedInState, nicknameState } from '../LoginRecoil';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// 다른 컴포넌트에서 해당 컴포넌트의 변수? 함수? 쓰려면 props 설정 해야함\r\nconst FoodInfo = ({ isOpen, onClose, restaurant }) => {\r\n    // 로그인 사용자만 이용하게 하기 위함 !\r\n    const [isLoggedin, setIsLoggedIn] = useRecoilState(isLoggedInState);\r\n\r\n    // db넣기 위해서 받는 거 (nickname, constent, review score)\r\n    const [nickname, setNickname] = useRecoilState(nicknameState);\r\n    const [reviewScore, setReviewScore] = useState(0);\r\n    //  review 상태\r\n    const [content, setContent] = useState('');\r\n\r\n    // db nickname 가져오기 위한 상태\r\n    const [data, setData] = useState([]);\r\n\r\n    if (!isOpen) return null;\r\n     \r\n\r\n    useEffect(() => {\r\n        // nickname 가져오기\r\n        let url = 'http://10.125.121.176:8080/allmembers';\r\n        fetch(url)\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n                setData(data);\r\n                console.log(data);\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }, []);\r\n\r\n    // # 검색 !\r\n    const handleSubmit = () => {\r\n        let restId = restaurant.id\r\n     \r\n        const data = {\r\n            restId,\r\n            nickname,\r\n            content,\r\n            reviewScore,\r\n        }\r\n\r\n        //review data fetch하긩\r\n        //review 작성해서 버튼 클릭하면 데이터 보내기\r\n        const getData = () => {\r\n            // event.preventDefault();\r\n            let url = 'http://10.125.121.176:8080/insertReview';\r\n\r\n            //fetch()\r\n            axios.post(url, data)\r\n                .then((resp) =>\r\n                    // 서버 응답 처리 \r\n                    console.log('리뷰 작성 성공', resp.data))\r\n                .catch((err) => {\r\n                    // 오류 처리\r\n                    console.log('리뷰 작성 오류:', err);\r\n                });\r\n        }\r\n        getData();\r\n\r\n        //리뷰작성 완료 후 초기화\r\n        setContent('');\r\n        setReviewScore(0);\r\n\r\n    }\r\n\r\n    return (\r\n        // react-modal 사용할때 요소 지정 다 해주어야 함\r\n        <ReactModal\r\n            isOpen={isOpen} // 모달 오픈\r\n            onRequestClose={onClose} // 클로즈\r\n            portalClassName={style.modalContent} //모달 창 스타일\r\n            overlayClassName={style.modalOverlay} // 배경 스타일\r\n            shouldCloseOnOverlayClick={false} // 모달 창 외부 클릭으로 닫히는 것 방지\r\n        >\r\n            {/* 모달 창의 크기가 변경되지 않는 이유가 react modal이 창 크기를 제어하는 방식과 관련있을 수 있음 ! 그래서 내부에서 클래스 네임 지정해서 창 크기 조절 ; 안됌 ㅡㅡ*/}\r\n            {/* 모달 내용 추가 : 리뷰, 평점 등 */}\r\n            <div className={style.modalContentInner}>\r\n                <h2 style={{ fontSize: '50px' }}>{restaurant.rname}</h2>\r\n                <h4>{restaurant.city + ' ' + restaurant.city_gu + ' ' + restaurant.city_dong + ' ' + restaurant.city_address}</h4>\r\n                {isLoggedin == false ?\r\n                    (<form>\r\n                        <label htmlFor=\"textarea_field\">리뷰를 작성하세요</label>\r\n                        {/* text area : input type의 text보다 더 긴 텍스트를 입력받을 수 있음 */}\r\n                        <textarea type='text'\r\n                            value={content} onChange={(e) => setContent(e.target.value)} />\r\n\r\n                        {/*제출 버튼 */}\r\n                        <div className={`${style.label} ${style.clickBtn}`}>\r\n                            <button type='button' className={`nes-btn is-error ${style.sarchBtn}`} onClick={handleSubmit}>Submit</button>\r\n                        </div>\r\n                    </form>\r\n                    ) : (<ReactModal\r\n                        isOpen={isOpen} // 모달 오픈\r\n                        onRequestClose={onClose} // 클로즈\r\n                        portalClassName={style.modalLogin}\r\n                        overlayClassName={style.modalOverlay}\r\n                        shouldCloseOnOverlayClick={false}>\r\n                        <div>\r\n                            <p>리뷰를 남기기 위해선 로그인이 필요 합니다</p>\r\n                            <Link to={'/login'}>로그인 하러가기</Link>\r\n                        </div>\r\n                        <button onClick={onClose} className={`${style.closeBtn}`}>Close</button>\r\n                    </ReactModal>\r\n                    )\r\n                }\r\n                <button onClick={onClose} className={`${style.closeBtn}`}>Close</button>\r\n            </div>\r\n        </ReactModal>\r\n    );\r\n}\r\nexport default FoodInfo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}