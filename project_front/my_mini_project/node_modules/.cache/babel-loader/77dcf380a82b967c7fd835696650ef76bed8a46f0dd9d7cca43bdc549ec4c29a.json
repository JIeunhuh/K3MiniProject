{"ast":null,"code":"var _jsxFileName = \"C:\\\\MiniProject\\\\project_front\\\\my_mini_project\\\\src\\\\project\\\\Community(SignUp&In)\\\\PostDetail.js\",\n  _s = $RefreshSig$();\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostDetail = ({\n  posts\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [post, setPost] = useState(null);\n  useEffect(() => {\n    // 서버에서 id에 해당하는 게시글 내용을 가져오는 로직을 구현해야 합니다.\n    // 서버에서 데이터를 가져온 후 setPost를 사용하여 상태 업데이트합니다.\n  }, [id]);\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(PostDetail, \"6+b5eOm0C2EIwwbuXxVLhmPamew=\", false, function () {\n  return [useParams];\n});\n_c = PostDetail;\nexport default PostDetail;\nvar _c;\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"names":["useParams","useEffect","useState","jsxDEV","_jsxDEV","PostDetail","posts","_s","id","post","setPost","children","fileName","_jsxFileName","lineNumber","columnNumber","title","content","_c","$RefreshReg$"],"sources":["C:/MiniProject/project_front/my_mini_project/src/project/Community(SignUp&In)/PostDetail.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nconst PostDetail = ({posts}) => {\r\n    const { id } = useParams();\r\n    const [post, setPost] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // 서버에서 id에 해당하는 게시글 내용을 가져오는 로직을 구현해야 합니다.\r\n        // 서버에서 데이터를 가져온 후 setPost를 사용하여 상태 업데이트합니다.\r\n\r\n\r\n    }, [id]);\r\n\r\n    if (!post) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>{post.title}</h2>\r\n            <p>{post.content}</p>\r\n            {/* 기타 게시글 내용을 보여주는 UI 구현 */}\r\n        </div>\r\n    );\r\n};\r\nexport default PostDetail;"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5C,MAAMC,UAAU,GAAGA,CAAC;EAACC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAG,CAAC,GAAGR,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZ;IACA;EAAA,CAGH,EAAE,CAACO,EAAE,CAAC,CAAC;EAER,IAAI,CAACC,IAAI,EAAE;IACP,oBAAOL,OAAA;MAAAO,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,oBACIX,OAAA;IAAAO,QAAA,gBACIP,OAAA;MAAAO,QAAA,EAAKF,IAAI,CAACO;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBX,OAAA;MAAAO,QAAA,EAAIF,IAAI,CAACQ;IAAO;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEpB,CAAC;AAEd,CAAC;AAACR,EAAA,CAtBIF,UAAU;EAAA,QACGL,SAAS;AAAA;AAAAkB,EAAA,GADtBb,UAAU;AAuBhB,eAAeA,UAAU;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}