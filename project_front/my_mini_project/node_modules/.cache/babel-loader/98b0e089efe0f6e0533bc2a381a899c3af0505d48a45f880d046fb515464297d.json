{"ast":null,"code":"var _jsxFileName = \"C:\\\\MiniProject\\\\project_front\\\\my_mini_project\\\\src\\\\project\\\\Community(SignUp&In)\\\\FoodComm.js\",\n  _s = $RefreshSig$();\n// 게시판 페이지\nimport { Link } from 'react-router-dom';\nimport { useRecoilValue } from 'recoil';\nimport { isLoggedInState } from '../LoginRecoil';\nimport style from './Login.module.css';\n// community 상단에는 login / join us 구현하기\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FoodComm = () => {\n  _s();\n  // session에 토큰값이 없는걸 초기값으로 잡음\n  const isLoggedIn = useRecoilValue(isLoggedInState);\n\n  // 세션에 토큰없으면 로그인 링크 뜨게\n  const handleLogin = () => {\n    // isLoggedIn == '';\n  };\n\n  // 세션에 토큰 있으면 로그인 상태이므로, 로그아웃 링크 뜨게 만듦! \n  const handleLogout = () => {\n    // isLoggedIn != '';\n    sessionStorage.removeItem('jwt');\n    alert('logout이 완료되었습니다.');\n  };\n  console.log(isLoggedIn);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: '/joinus',\n        children: \"Join us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), isLoggedIn == '' ? /*#__PURE__*/_jsxDEV(Link, {\n        to: '/login',\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 37\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `${style.logoutBtn}`,\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 72\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(FoodComm, \"Nwz67u9c1Z4Wjv2oLPjKBVEEvH0=\", false, function () {\n  return [useRecoilValue];\n});\n_c = FoodComm;\nexport default FoodComm;\nvar _c;\n$RefreshReg$(_c, \"FoodComm\");","map":{"version":3,"names":["Link","useRecoilValue","isLoggedInState","style","jsxDEV","_jsxDEV","FoodComm","_s","isLoggedIn","handleLogin","handleLogout","sessionStorage","removeItem","alert","console","log","children","to","fileName","_jsxFileName","lineNumber","columnNumber","type","className","logoutBtn","onClick","_c","$RefreshReg$"],"sources":["C:/MiniProject/project_front/my_mini_project/src/project/Community(SignUp&In)/FoodComm.js"],"sourcesContent":["// 게시판 페이지\r\nimport { Link } from 'react-router-dom';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { isLoggedInState } from '../LoginRecoil';\r\n\r\nimport style from './Login.module.css';\r\n// community 상단에는 login / join us 구현하기\r\nconst FoodComm = () => {\r\n\r\n    // session에 토큰값이 없는걸 초기값으로 잡음\r\n    const isLoggedIn = useRecoilValue(isLoggedInState);\r\n\r\n    // 세션에 토큰없으면 로그인 링크 뜨게\r\n    const handleLogin = () => {\r\n        // isLoggedIn == '';\r\n    }\r\n\r\n    // 세션에 토큰 있으면 로그인 상태이므로, 로그아웃 링크 뜨게 만듦! \r\n    const handleLogout = () => {\r\n        // isLoggedIn != '';\r\n        sessionStorage.removeItem('jwt');\r\n        alert('logout이 완료되었습니다.');\r\n    }\r\n\r\n    console.log(isLoggedIn);\r\n    return (\r\n        <main>\r\n            <div>\r\n                <Link to={'/joinus'}>Join us</Link>\r\n                {/* 토큰값 있으면 로그아웃, 없으면 로그인 뜨게 */}\r\n                {isLoggedIn == '' ? <Link to={'/login'}>Login</Link> : <button type='button' className={`${style.logoutBtn}`} onClick={handleLogout}>Logout</button>}\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\nexport default FoodComm;"],"mappings":";;AAAA;AACA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,SAASC,cAAc,QAAQ,QAAQ;AACvC,SAASC,eAAe,QAAQ,gBAAgB;AAEhD,OAAOC,KAAK,MAAM,oBAAoB;AACtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEnB;EACA,MAAMC,UAAU,GAAGP,cAAc,CAACC,eAAe,CAAC;;EAElD;EACA,MAAMO,WAAW,GAAGA,CAAA,KAAM;IACtB;EAAA,CACH;;EAED;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvB;IACAC,cAAc,CAACC,UAAU,CAAC,KAAK,CAAC;IAChCC,KAAK,CAAC,kBAAkB,CAAC;EAC7B,CAAC;EAEDC,OAAO,CAACC,GAAG,CAACP,UAAU,CAAC;EACvB,oBACIH,OAAA;IAAAW,QAAA,eACIX,OAAA;MAAAW,QAAA,gBACIX,OAAA,CAACL,IAAI;QAACiB,EAAE,EAAE,SAAU;QAAAD,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EAElCb,UAAU,IAAI,EAAE,gBAAGH,OAAA,CAACL,IAAI;QAACiB,EAAE,EAAE,QAAS;QAAAD,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,gBAAGhB,OAAA;QAAQiB,IAAI,EAAC,QAAQ;QAACC,SAAS,EAAG,GAAEpB,KAAK,CAACqB,SAAU,EAAE;QAACC,OAAO,EAAEf,YAAa;QAAAM,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEf,CAAC;AAAAd,EAAA,CA3BKD,QAAQ;EAAA,QAGSL,cAAc;AAAA;AAAAyB,EAAA,GAH/BpB,QAAQ;AA4Bd,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}