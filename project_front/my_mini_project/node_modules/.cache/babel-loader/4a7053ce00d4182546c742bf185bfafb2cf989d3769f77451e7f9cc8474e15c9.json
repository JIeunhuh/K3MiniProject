{"ast":null,"code":"var _jsxFileName = \"C:\\\\MiniProject\\\\project_front\\\\my_mini_project\\\\src\\\\project\\\\Search_RestaurantLists\\\\FoodInfo.js\",\n  _s = $RefreshSig$();\n// Foodlist 클릭하면 상세정보 달아주기(Modal)\nimport style from './Modal.module.css';\nimport ReactModal from 'react-modal';\nimport { useState, useEffect } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { isLoggedInState, nicknameState } from '../LoginRecoil';\nimport Login from '../Community(SignUp&In)/Login';\nimport axios from 'axios';\n\n// 다른 컴포넌트에서 해당 컴포넌트의 변수? 함수? 쓰려면 props 설정 해야함\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FoodInfo = ({\n  isOpen,\n  onClose,\n  restaurant\n}) => {\n  _s();\n  // 로그인 사용자만 이용하게 하기 위함 !\n  const [isLoggedin, setIsLoggedIn] = useRecoilState(isLoggedInState);\n\n  // db넣기 위해서 받는 거 (nickname, constent, review score)\n  const [nickname, setNickname] = useRecoilState(nicknameState);\n  const [reviewScore, setReviewScore] = useState(0);\n  //  review 상태\n  const [content, setContent] = useState('');\n\n  // db nickname 가져오기 위한 상태\n  const [data, setData] = useState([]);\n  if (!isOpen) return null;\n\n  // useEffect(() => {\n  //     // nickname 가져오기\n  //     let url = 'http://10.125.121.176:8080/allmembers';\n  //     fetch(url)\n  //         .then((resp) => resp.json())\n  //         .then((data) => {\n  //             setData(data);\n  //             console.log(data);\n  //         })\n  //         .catch((err) => console.log(err));\n  // }, []);\n\n  // # 검색 !\n  const handleSubmit = () => {\n    let restId = restaurant.id;\n    const data = {\n      restId,\n      nickname,\n      content,\n      reviewScore\n    };\n\n    //review data fetch하긩\n    //review 작성해서 버튼 클릭하면 데이터 보내기\n    const getData = () => {\n      // event.preventDefault();\n      let url = 'http://10.125.121.176:8080/insertReview';\n\n      //fetch()\n      axios.post(url, data).then(resp =>\n      // 서버 응답 처리 \n      console.log('리뷰 작성 성공', resp.data)).catch(err => {\n        // 오류 처리\n        console.log('리뷰 작성 오류:', err);\n      });\n    };\n    getData();\n\n    //리뷰작성 완료 후 초기화\n    setContent('');\n    setReviewScore(0);\n  };\n  return (\n    /*#__PURE__*/\n    // react-modal 사용할때 요소 지정 다 해주어야 함\n    _jsxDEV(ReactModal, {\n      isOpen: isOpen // 모달 오픈\n      ,\n      onRequestClose: onClose // 클로즈\n      ,\n      portalClassName: style.modalContent //모달 창 스타일\n      ,\n      overlayClassName: style.modalOverlay // 배경 스타일\n      ,\n      shouldCloseOnOverlayClick: false // 모달 창 외부 클릭으로 닫히는 것 방지\n      ,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.modalContentInner,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            fontSize: '50px'\n          },\n          children: restaurant.rname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: restaurant.city + ' ' + restaurant.city_gu + ' ' + restaurant.city_dong + ' ' + restaurant.city_address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), isLoggedInState == false ? /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"textarea_field\",\n            children: \"\\uB9AC\\uBDF0\\uB97C \\uC791\\uC131\\uD558\\uC138\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            value: content,\n            onChange: e => setContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${style.label} ${style.clickBtn}`,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: `nes-btn is-error ${style.sarchBtn}`,\n              onClick: handleSubmit,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(ReactModal, {\n          isOpen: isOpen // 모달 오픈\n          ,\n          onRequestClose: onClose // 클로즈\n          ,\n          portalClassName: style.modalLogin,\n          overlayClassName: style.modalOverlay,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\uB9AC\\uBDF0\\uB97C \\uB0A8\\uAE30\\uAE30 \\uC704\\uD574\\uC120 \\uB85C\\uADF8\\uC778\\uC774 \\uD544\\uC694 \\uD569\\uB2C8\\uB2E4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: `${style.closeBtn}`,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(FoodInfo, \"J5irWDPMVn6HrtacUx8Fz2Jo4yQ=\", false, function () {\n  return [useRecoilState, useRecoilState];\n});\n_c = FoodInfo;\nexport default FoodInfo;\nvar _c;\n$RefreshReg$(_c, \"FoodInfo\");","map":{"version":3,"names":["style","ReactModal","useState","useEffect","useRecoilState","isLoggedInState","nicknameState","Login","axios","jsxDEV","_jsxDEV","FoodInfo","isOpen","onClose","restaurant","_s","isLoggedin","setIsLoggedIn","nickname","setNickname","reviewScore","setReviewScore","content","setContent","data","setData","handleSubmit","restId","id","getData","url","post","then","resp","console","log","catch","err","onRequestClose","portalClassName","modalContent","overlayClassName","modalOverlay","shouldCloseOnOverlayClick","children","className","modalContentInner","fontSize","rname","fileName","_jsxFileName","lineNumber","columnNumber","city","city_gu","city_dong","city_address","htmlFor","type","value","onChange","e","target","label","clickBtn","sarchBtn","onClick","modalLogin","closeBtn","_c","$RefreshReg$"],"sources":["C:/MiniProject/project_front/my_mini_project/src/project/Search_RestaurantLists/FoodInfo.js"],"sourcesContent":["// Foodlist 클릭하면 상세정보 달아주기(Modal)\r\nimport style from './Modal.module.css';\r\nimport ReactModal from 'react-modal';\r\nimport { useState, useEffect } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport { isLoggedInState, nicknameState } from '../LoginRecoil';\r\nimport Login from '../Community(SignUp&In)/Login';\r\nimport axios from 'axios';\r\n\r\n// 다른 컴포넌트에서 해당 컴포넌트의 변수? 함수? 쓰려면 props 설정 해야함\r\nconst FoodInfo = ({ isOpen, onClose, restaurant }) => {\r\n    // 로그인 사용자만 이용하게 하기 위함 !\r\n    const [isLoggedin, setIsLoggedIn] = useRecoilState(isLoggedInState);\r\n\r\n    // db넣기 위해서 받는 거 (nickname, constent, review score)\r\n    const [nickname, setNickname] = useRecoilState(nicknameState);\r\n    const [reviewScore, setReviewScore] = useState(0);\r\n    //  review 상태\r\n    const [content, setContent] = useState('');\r\n\r\n    // db nickname 가져오기 위한 상태\r\n    const [data, setData] = useState([]);\r\n\r\n    if (!isOpen) return null;\r\n\r\n    // useEffect(() => {\r\n    //     // nickname 가져오기\r\n    //     let url = 'http://10.125.121.176:8080/allmembers';\r\n    //     fetch(url)\r\n    //         .then((resp) => resp.json())\r\n    //         .then((data) => {\r\n    //             setData(data);\r\n    //             console.log(data);\r\n    //         })\r\n    //         .catch((err) => console.log(err));\r\n    // }, []);\r\n\r\n    // # 검색 !\r\n    const handleSubmit = () => {\r\n        let restId = restaurant.id\r\n        const data = {\r\n            restId,\r\n            nickname,\r\n            content,\r\n            reviewScore,\r\n        }\r\n\r\n        //review data fetch하긩\r\n        //review 작성해서 버튼 클릭하면 데이터 보내기\r\n        const getData = () => {\r\n            // event.preventDefault();\r\n            let url = 'http://10.125.121.176:8080/insertReview';\r\n\r\n            //fetch()\r\n            axios.post(url, data)\r\n                .then((resp) =>\r\n                    // 서버 응답 처리 \r\n                    console.log('리뷰 작성 성공', resp.data))\r\n                .catch((err) => {\r\n                    // 오류 처리\r\n                    console.log('리뷰 작성 오류:', err);\r\n                });\r\n        }\r\n        getData();\r\n\r\n        //리뷰작성 완료 후 초기화\r\n        setContent('');\r\n        setReviewScore(0);\r\n\r\n    }\r\n\r\n    return (\r\n        // react-modal 사용할때 요소 지정 다 해주어야 함\r\n        <ReactModal\r\n            isOpen={isOpen} // 모달 오픈\r\n            onRequestClose={onClose} // 클로즈\r\n            portalClassName={style.modalContent} //모달 창 스타일\r\n            overlayClassName={style.modalOverlay} // 배경 스타일\r\n            shouldCloseOnOverlayClick={false} // 모달 창 외부 클릭으로 닫히는 것 방지\r\n        >\r\n            {/* 모달 창의 크기가 변경되지 않는 이유가 react modal이 창 크기를 제어하는 방식과 관련있을 수 있음 ! 그래서 내부에서 클래스 네임 지정해서 창 크기 조절 ; 안됌 ㅡㅡ*/}\r\n            {/* 모달 내용 추가 : 리뷰, 평점 등 */}\r\n            <div className={style.modalContentInner}>\r\n                <h2 style={{ fontSize: '50px' }}>{restaurant.rname}</h2>\r\n                <h4>{restaurant.city + ' ' + restaurant.city_gu + ' ' + restaurant.city_dong + ' ' + restaurant.city_address}</h4>\r\n                {isLoggedInState == false ?\r\n                    (<form>\r\n                        <label htmlFor=\"textarea_field\">리뷰를 작성하세요</label>\r\n                        {/* text area : input type의 text보다 더 긴 텍스트를 입력받을 수 있음 */}\r\n                        <textarea type='text'\r\n                            value={content} onChange={(e) => setContent(e.target.value)} />\r\n\r\n                        {/*제출 버튼 */}\r\n                        <div className={`${style.label} ${style.clickBtn}`}>\r\n                            <button type='button' className={`nes-btn is-error ${style.sarchBtn}`} onClick={handleSubmit}>Submit</button>\r\n                        </div>\r\n                    </form>\r\n                    ) : (<ReactModal\r\n                        isOpen={isOpen} // 모달 오픈\r\n                        onRequestClose={onClose} // 클로즈\r\n                        portalClassName={style.modalLogin}\r\n                        overlayClassName={style.modalOverlay}>\r\n                        <div>\r\n                            <p>리뷰를 남기기 위해선 로그인이 필요 합니다</p>\r\n                            <Login />\r\n                        </div>\r\n                    </ReactModal>)\r\n                }\r\n                <button onClick={onClose} className={`${style.closeBtn}`}>Close</button>\r\n            </div>\r\n        </ReactModal>\r\n    );\r\n}\r\nexport default FoodInfo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}